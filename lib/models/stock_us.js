// Generated by CoffeeScript 1.6.1
(function() {
  var StockUS, WindTalker, settings, stock_us,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  WindTalker = require('./wind_talker');

  settings = require('../config/settings');

  StockUS = (function(_super) {

    __extends(StockUS, _super);

    function StockUS() {
      return StockUS.__super__.constructor.apply(this, arguments);
    }

    StockUS.prototype.redisKey = function(ticker) {
      var key;
      if (ticker) {
        return key = "" + settings.redisNamespace + ":US:" + ticker;
      } else {
        return null;
      }
    };

    return StockUS;

  })(WindTalker);

  stock_us = new StockUS('US', settings.host, settings.port);

  process.on('message', function(msg) {
    console.log("[CHILD][US] RECEIVED " + msg);
    if (msg === 'start') {
      stock_us.listen();
    }
    return process.send("[CHILD][US] process#" + process.pid + " copy " + msg + ".");
  });

  process.on('error', function(err) {
    console.log('[CHILD][US] Internal Error #{err} Occured.');
    process.send(err);
    return process.exit(1);
  });

  process.on('exit', function() {
    console.log('EXIT ....');
    stock_us.stop();
    return process.send("[CHILD][US] process#" + process.pid + " exit.");
  });

  process.on('SIGTERM', function() {
    console.log('SIGTERM ....');
    process.send("[CHILD][US] process#" + process.pid + " terminated.");
    return process.exit(0);
  });

}).call(this);
